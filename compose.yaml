services:
  db:
    image: postgis/postgis:18-3.6
    container_name: postgres_postgis
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    expose:
      - ${DB_PORT}
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:8.13
    container_name: pgadmin
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  redis:
    image: redis:7
    container_name: redis
    restart: unless-stopped
    expose:
      - ${REDIS_PORT}
    volumes:
      - redis_data:/data
    command: [ "redis-server", "--appendonly", "yes" ]

  web:
    build: .
    container_name: fastapi_app
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8000:8000"
    environment:
      DEBUG: False

      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
      DB_HOST: db

      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT}

      API_KEY: ${API_KEY}




volumes:
  pg_data:
  pgadmin_data:
  redis_data:




